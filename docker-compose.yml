version: '2.4'
services:
  eth1:
    image: ethereum/client-go:latest
    container_name: eth1
    restart: always
    volumes:
      - ./private/eth1_node:/root
    network_mode: host
    # healthcheck:
    #     test: sleep 5
    #     interval: 1s
    #     timeout: 1s
    #     retries: 1

  #        command: # comment this out for mainnet
  #            - --goerli # comment this out for mainnet

  postgres:
    image: postgres:12.0
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=debug
      - POSTGRES_USER=debug
      - POSTGRES_DB=beaconcha
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    #        command: docker exec -i 46bc72682b79 psql -U debug -d beaconcha < tables.sql
    #        command: ["/bin/sh -c postgres.sh"]
    ports:
      - "5432:5432"

  prysm:
    image: gcr.io/prysmaticlabs/prysm/beacon-chain:latest
    container_name: prysm
    restart: always
    volumes:
      - ./private/eth2_data:/data
      # - ./private/eth2_data/main:/data # use this for mainnet
      - ./private/eth1_node/.ethereum:/eth
    network_mode: host
    #    command:
    #      - --datadir=/data
    #      - --rpc-host=0.0.0.0
    #      - --monitoring-host=0.0.0.0
    #      - --http-web3provider=/eth/goerli/geth.ipc
    #      # - --http-web3provider=/eth/geth.ipc #use this option for mainnet
    #      - --accept-terms-of-use
    depends_on:
      - eth1
      # condition: service_healthy

  go:
    image: golang:1.15
    container_name: golang
    restart: always
    volumes:
      - ./:/usr/src/app
    working_dir: /usr/src/app
    network_mode: host
    depends_on:
      - eth1
      - postgres
      - prysm
    command: /bin/sh
    stdin_open: true
    tty: true

  explorer:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
    ports:
      - "3333:3333"
    restart: always
volumes:
  db:
